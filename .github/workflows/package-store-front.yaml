name: package-store-front

on:
  push:
    branches:
      - 'main'
    paths:
      - 'src/store-front/**'
  workflow_call:
    

 # workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  publish-container-image:
    
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get build number
        run: |
          if [ ! -f build_number.txt ]; then
            echo "1" > build_number.txt
          fi
          echo $(( $(cat build_number.txt) + 1 )) > build_number.txt

      - name: Set environment variables
        id: set-variables
        run: |
          BUILD_NUMBER=$(cat build_number.txt)
          echo "REPOSITORY=${{ secrets.ACR_REPO }}" >> "$GITHUB_OUTPUT"
          echo "IMAGE=store-front" >> "$GITHUB_OUTPUT"
          echo "VERSION=${BUILD_NUMBER}" >> "$GITHUB_OUTPUT"
          echo "CREATED=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> "$GITHUB_OUTPUT"

      - name: Env variable output
        id: test-variables
        run: |
          echo ${{ steps.set-variables.outputs.REPOSITORY }}
          echo ${{ steps.set-variables.outputs.IMAGE }}
          echo ${{ steps.set-variables.outputs.VERSION }}
          echo ${{ steps.set-variables.outputs.CREATED }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_REPO }}
          username: ${{ secrets.ACR_USER }}
          password: ${{ secrets.ACR_PASS }}

      - name: Build
        uses: docker/build-push-action@v2
        with:
          context: src/store-front
          file: src/store-front/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: false
          tags: |
            ${{ steps.set-variables.outputs.REPOSITORY }}/${{ steps.set-variables.outputs.IMAGE }}:latest
            ${{ steps.set-variables.outputs.REPOSITORY }}/${{ steps.set-variables.outputs.IMAGE }}:${{ steps.set-variables.outputs.VERSION }}
          labels: |
            org.opencontainers.image.source=${{ github.repositoryUrl }}
            org.opencontainers.image.created=${{ steps.set-variables.outputs.CREATED }}
            org.opencontainers.image.revision=${{ steps.set-variables.outputs.VERSION }}
            
      - name: Inspect Store Front Image
        run: |
          docker inspect --format='{{index .Id}}' ${{ steps.set-variables.outputs.REPOSITORY }}/${{ steps.set-variables.outputs.IMAGE }}:${{ steps.set-variables.outputs.VERSION }} > ${{ steps.set-variables.outputs.IMAGE }}-digest.txt

      - name: Save Store Front Image
        run: |
          docker save ${{ steps.set-variables.outputs.REPOSITORY }}/${{ steps.set-variables.outputs.IMAGE }}:${{ steps.set-variables.outputs.VERSION }} -o ${{ steps.set-variables.outputs.IMAGE }}.tar
      
      - name: Upload Store Front Image
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.set-variables.outputs.IMAGE }}-image
          path: ${{ steps.set-variables.outputs.IMAGE }}.tar

      - name: Upload Store Front Digest
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.set-variables.outputs.IMAGE }}-digest
          path: ${{ steps.set-variables.outputs.IMAGE }}-digest.txt

