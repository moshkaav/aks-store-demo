name: Build and Deploy AKS Store Quickstart

on:
  push:
    branches:
      - main

env:
  SPECTRAL_DSN: ${{ secrets.SPECTRAL_DSN }}

jobs:
  code_scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install and run Spectral CI
        uses: checkpointsw/spectral-github-action@v3
        with:
          spectral-dsn: ${{ secrets.SPECTRAL_DSN }}
          spectral-args: scan --ok --engines secrets,iac,oss --include-tags base,audit3,iac

  build_order_service:
    runs-on: ubuntu-latest
    needs: code_scan
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Log in to ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_REPO }}
          username: ${{ secrets.ACR_USER }}
          password: ${{ secrets.ACR_PASS }}
      - name: Build Order Service Image
        run: |
          docker build -t ${{ secrets.ACR_REPO }}/code-to-scan/order-service:${{ env.NEXT_BUILD_NUMBER }} ./src/order-service
          echo "IMAGE_TAG=${{ secrets.ACR_REPO }}/code-to-scan/order-service:${{ env.NEXT_BUILD_NUMBER }}" >> $GITHUB_ENV
      - name: Save Order Service Image to Tar
        run: |
          docker save $IMAGE_TAG -o order-service.tar
      - name: Scan Order Service Image
        run: |
          docker run -e CHKP_CLOUDGUARD_ID=${{ secrets.CHKP_CLOUDGUARD_ID }} \
                     -e CHKP_CLOUDGUARD_SECRET=${{ secrets.CHKP_CLOUDGUARD_SECRET }} \
                     -e SHIFTLEFT_REGION=${{ env.SHIFTLEFT_REGION }} \
                     -v $(pwd)/order-service.tar:/tmp/images/image.tar \
                     checkpoint/shiftleft:latest_v2 shiftleft image-scan -e ${{ secrets.SHIFTLEFT_ENV }} -i /tmp/images/image.tar

  build_product_service:
    runs-on: ubuntu-latest
    needs: build_order_service
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Log in to ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_REPO }}
          username: ${{ secrets.ACR_USER }}
          password: ${{ secrets.ACR_PASS }}
      - name: Build Product Service Image
        run: |
          docker build -t ${{ secrets.ACR_REPO }}/code-to-scan/product-service:${{ env.NEXT_BUILD_NUMBER }} ./src/product-service
          echo "IMAGE_TAG=${{ secrets.ACR_REPO }}/code-to-scan/product-service:${{ env.NEXT_BUILD_NUMBER }}" >> $GITHUB_ENV
      - name: Save Product Service Image to Tar
        run: |
          docker save $IMAGE_TAG -o product-service.tar
      - name: Scan Product Service Image
        run: |
          docker run -e CHKP_CLOUDGUARD_ID=${{ secrets.CHKP_CLOUDGUARD_ID }} \
                     -e CHKP_CLOUDGUARD_SECRET=${{ secrets.CHKP_CLOUDGUARD_SECRET }} \
                     -e SHIFTLEFT_REGION=${{ env.SHIFTLEFT_REGION }} \
                     -v $(pwd)/product-service.tar:/tmp/images/image.tar \
                     checkpoint/shiftleft:latest_v2 shiftleft image-scan -e ${{ secrets.SHIFTLEFT_ENV }} -i /tmp/images/image.tar

  build_store_front:
    runs-on: ubuntu-latest
    needs: build_product_service
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Log in to ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_REPO }}
          username: ${{ secrets.ACR_USER }}
          password: ${{ secrets.ACR_PASS }}
      - name: Build Store Front Image
        run: |
          docker build -t ${{ secrets.ACR_REPO }}/code-to-scan/store-front:${{ env.NEXT_BUILD_NUMBER }} ./src/store-front
          echo "IMAGE_TAG=${{ secrets.ACR_REPO }}/code-to-scan/store-front:${{ env.NEXT_BUILD_NUMBER }}" >> $GITHUB_ENV
      - name: Save Store Front Image to Tar
        run: |
          docker save $IMAGE_TAG -o store-front.tar
      - name: Scan Store Front Image
        run: |
          docker run -e CHKP_CLOUDGUARD_ID=${{ secrets.CHKP_CLOUDGUARD_ID }} \
                     -e CHKP_CLOUDGUARD_SECRET=${{ secrets.CHKP_CLOUDGUARD_SECRET }} \
                     -e SHIFTLEFT_REGION=${{ env.SHIFTLEFT_REGION }} \
                     -v $(pwd)/store-front.tar:/tmp/images/image.tar \
                     checkpoint/shiftleft:latest_v2 shiftleft image-scan -e ${{ secrets.SHIFTLEFT_ENV }} -i /tmp/images/image.tar

  push:
    runs-on: ubuntu-latest
    needs: build_store_front
    steps:
      - name: Log in to ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_REPO }}
          username: ${{ secrets.ACR_USER }}
          password: ${{ secrets.ACR_PASS }}
      - name: Push Order Service Image
        run: |
          docker push ${{ secrets.ACR_REPO }}/code-to-scan/order-service:${{ env.NEXT_BUILD_NUMBER }}
      - name: Push Product Service Image
        run: |
          docker push ${{ secrets.ACR_REPO }}/code-to-scan/product-service:${{ env.NEXT_BUILD_NUMBER }}
      - name: Push Store Front Image
        run: |
          docker push ${{ secrets.ACR_REPO }}/code-to-scan/store-front:${{ env.NEXT_BUILD_NUMBER }}
