name: Build and Deploy AKS Store Quickstart

on:
  push:
    branches:
      - main

env:
  SPECTRAL_DSN: ${{ secrets.SPECTRAL_DSN }}

jobs:
  code_scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install and run Spectral CI
        uses: checkpointsw/spectral-github-action@v3
        with:
          spectral-dsn: ${{ secrets.SPECTRAL_DSN }}
          spectral-args: scan --ok --engines secrets,iac,oss --include-tags base,audit3,iac

  build:
    runs-on: ubuntu-latest
    needs: code_scan
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_REPO }}
          username: ${{ secrets.ACR_USER }}
          password: ${{ secrets.ACR_PASS }}

      - name: Retrieve Build Number
        run: |
          if [ ! -f build_number.txt ]; then echo "0" > build_number.txt; fi
          BUILD_NUMBER=$(cat build_number.txt)
          NEXT_BUILD_NUMBER=$((BUILD_NUMBER+1))
          echo "Next build number is $NEXT_BUILD_NUMBER"
          echo $NEXT_BUILD_NUMBER > build_number.txt  # Overwrite the file with the next build number

      - name: Commit the incremented build number
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git pull origin main
          git add build_number.txt
          git commit -m "Increment build number to $(cat build_number.txt)"
          git push origin main

      - name: Upload Build Number Artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-number
          path: build_number.txt

  build_order_service:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download Build Number Artifact
        uses: actions/download-artifact@v3
        with:
          name: build-number

      - name: Log in to ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_REPO }}
          username: ${{ secrets.ACR_USER }}
          password: ${{ secrets.ACR_PASS }}

      - name: Build Order Service Image
        run: |
          NEXT_BUILD_NUMBER=$(cat build_number.txt)  # Read the build number from file
          echo "Using build number: $NEXT_BUILD_NUMBER"
          docker build -t ${{ secrets.ACR_REPO }}/code-to-cloud/order-service:$NEXT_BUILD_NUMBER ./src/order-service
          echo "IMAGE_TAG=${{ secrets.ACR_REPO }}/code-to-cloud/order-service:$NEXT_BUILD_NUMBER" >> $GITHUB_ENV

  build_product_service:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download Build Number Artifact
        uses: actions/download-artifact@v3
        with:
          name: build-number

      - name: Log in to ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_REPO }}
          username: ${{ secrets.ACR_USER }}
          password: ${{ secrets.ACR_PASS }}

      - name: Build Product Service Image
        run: |
          NEXT_BUILD_NUMBER=$(cat build_number.txt)  # Read the build number from file
          echo "Using build number: $NEXT_BUILD_NUMBER"
          docker build -t ${{ secrets.ACR_REPO }}/code-to-cloud/product-service:$NEXT_BUILD_NUMBER ./src/product-service
          echo "IMAGE_TAG=${{ secrets.ACR_REPO }}/code-to-cloud/product-service:$NEXT_BUILD_NUMBER" >> $GITHUB_ENV

  build_store_front:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download Build Number Artifact
        uses: actions/download-artifact@v3
        with:
          name: build-number

      - name: Log in to ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_REPO }}
          username: ${{ secrets.ACR_USER }}
          password: ${{ secrets.ACR_PASS }}

      - name: Build Store Front Image
        run: |
          NEXT_BUILD_NUMBER=$(cat build_number.txt)  # Read the build number from file
          echo "Using build number: $NEXT_BUILD_NUMBER"
          docker build -t ${{ secrets.ACR_REPO }}/code-to-cloud/store-front:$NEXT_BUILD_NUMBER ./src/store-front
          echo "IMAGE_TAG=${{ secrets.ACR_REPO }}/code-to-cloud/store-front:$NEXT_BUILD_NUMBER" >> $GITHUB_ENV

  image_assurance_order_service:
    runs-on: ubuntu-latest
    needs: build_order_service
    steps:
      - name: Download Build Number Artifact
        uses: actions/download-artifact@v3
        with:
          name: build-number

      - name: Save and Scan Order Service Image
        run: |
          NEXT_BUILD_NUMBER=$(cat build_number.txt)  # Read the build number from file
          docker save ${{ secrets.ACR_REPO }}/code-to-cloud/order-service:$NEXT_BUILD_NUMBER -o order-service.tar
          docker run -e CHKP_CLOUDGUARD_ID=${{ secrets.CHKP_CLOUDGUARD_ID }} \
                     -e CHKP_CLOUDGUARD_SECRET=${{ secrets.CHKP_CLOUDGUARD_SECRET }} \
                     -e SHIFTLEFT_REGION=${{ env.SHIFTLEFT_REGION }} \
                     -v $(pwd)/order-service.tar:/tmp/images/image.tar \
                     checkpoint/shiftleft:latest_v2 shiftleft image-scan -e ${{ secrets.SHIFTLEFT_ENV }} -i /tmp/images/image.tar

  image_assurance_product_service:
    runs-on: ubuntu-latest
    needs: build_product_service
    steps:
      - name: Download Build Number Artifact
        uses: actions/download-artifact@v3
        with:
          name: build-number

      - name: Save and Scan Product Service Image
        run: |
          NEXT_BUILD_NUMBER=$(cat build_number.txt)  # Read the build number from file
          docker save ${{ secrets.ACR_REPO }}/code-to-cloud/product-service:$NEXT_BUILD_NUMBER -o product-service.tar
          docker run -e CHKP_CLOUDGUARD_ID=${{ secrets.CHKP_CLOUDGUARD_ID }} \
                     -e CHKP_CLOUDGUARD_SECRET=${{ secrets.CHKP_CLOUDGUARD_SECRET }} \
                     -e SHIFTLEFT_REGION=${{ env.SHIFTLEFT_REGION }} \
                     -v $(pwd)/product-service.tar:/tmp/images/image.tar \
                     checkpoint/shiftleft:latest_v2 shiftleft image-scan -e ${{ secrets.SHIFTLEFT_ENV }} -i /tmp/images/image.tar

  image_assurance_store_front:
    runs-on: ubuntu-latest
    needs: build_store_front
    steps:
      - name: Download Build Number Artifact
        uses: actions/download-artifact@v3
        with:
          name: build-number

      - name: Save and Scan Store Front Image
        run: |
          NEXT_BUILD_NUMBER=$(cat build_number.txt)  # Read the build number from file
          docker save ${{ secrets.ACR_REPO }}/code-to-cloud/store-front:$NEXT_BUILD_NUMBER -o store-front.tar
          docker run -e CHKP_CLOUDGUARD_ID=${{ secrets.CHKP_CLOUDGUARD_ID }} \
                     -e CHKP_CLOUDGUARD_SECRET=${{ secrets.CHKP_CLOUDGUARD_SECRET }} \
                     -e SHIFTLEFT_REGION=${{ env.SHIFTLEFT_REGION }} \
                     -v $(pwd)/store-front.tar:/tmp/images/image.tar \
                     checkpoint/shiftleft:latest_v2 shiftleft image-scan -e ${{ secrets.SHIFTLEFT_ENV }} -i /tmp/images/image.tar

  push:
    runs-on: ubuntu-latest
    needs: [image_assurance_order_service, image_assurance_product_service, image_assurance_store_front]
    steps:
      - name: Download Build Number Artifact
        uses: actions/download-artifact@v3
        with:
          name: build-number

      - name: Log in to ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_REPO }}
          username: ${{ secrets.ACR_USER }}
          password: ${{ secrets.ACR_PASS }}

      - name: Push Order Service Image
        run: |
          NEXT_BUILD_NUMBER=$(cat build_number.txt)  # Read the build number from file
          docker push ${{ secrets.ACR_REPO }}/code-to-cloud/order-service:$NEXT_BUILD_NUMBER

      - name: Push Product Service Image
        run: |
          NEXT_BUILD_NUMBER=$(cat build_number.txt)  # Read the build number from file
